package team.rvn.xrktoolslib;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.icu.text.DateFormat;
import android.icu.text.SimpleDateFormat;
import android.widget.TextView;

import java.io.ByteArrayOutputStream;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Random;

public class XRKToolsLib {


    // Test key for free use and public repo
    final private String hashKey = "474b4f2a9560af36d20940bea1bfb937";

    /* RK Tools 1.0.0 Release
    $$$$$$$\..$$\...$$\.......$$$$$$$$\.....................$$\...........
    $$..__$$\.$$.|.$$..|......\__$$..__|....................$$.|..........
    $$.|..$$.|$$.|$$../..........$$.|....$$$$$$\...$$$$$$\..$$.|.$$$$$$$\.
    $$$$$$$..|$$$$$../...........$$.|...$$..__$$\.$$..__$$\.$$.|$$.._____|
    $$..__$$<.$$..$$<............$$.|...$$./..$$.|$$./..$$.|$$.|\$$$$$$\..
    $$.|..$$.|$$.|\$$\...........$$.|...$$.|..$$.|$$.|..$$.|$$.|.\____$$\.
    $$.|..$$.|$$.|.\$$\..........$$.|...\$$$$$$..|\$$$$$$..|$$.|$$$$$$$..|
    \__|..\__|\__|..\__|.........\__|....\______/..\______/.\__|\_______/.
    ......................................................................
    Free to use useful Android Tools.
    This repo consists of some handy things for developing
    ......................................................................
    Created by Jason Poster
    ......................................................................
    */


    public byte[] getBytesFromBitmap(Bitmap bitmap, String key) {
        if (toMD5(key).equals(hashKey)) {
            ByteArrayOutputStream stream = new ByteArrayOutputStream();
            bitmap.compress(Bitmap.CompressFormat.JPEG, 70, stream);
            return stream.toByteArray();
        } else return null;
    }

    public Bitmap bytesToBitmap(byte[] bytes, String key) {
        // Convert bytes data into a Bitmap
        if (toMD5(key).equals(hashKey)) {
            Bitmap bmp = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
            return bmp;
        } else
            return null;
    }

    public static String toMD5(String st) {
        MessageDigest messageDigest = null;
        byte[] digest = new byte[0];

        try {
            messageDigest = MessageDigest.getInstance("MD5");
            messageDigest.reset();
            messageDigest.update(st.getBytes());
            digest = messageDigest.digest();
        } catch (NoSuchAlgorithmException e) {
            // Nothing wrong can happen
            e.printStackTrace();
        }

        BigInteger bigInt = new BigInteger(1, digest);
        String md5Hex = bigInt.toString(16);

        while (md5Hex.length() < 32) {
            md5Hex = "0" + md5Hex;
        }
//    Running:
//    TextView steps;
//    SesnsorManager sesnsorManager;
//    boolean running = false;


//
        return md5Hex;
    }

    public static int levenstain(String str1, String str2) {
        int[] Di_1 = new int[str2.length() + 1];
        int[] Di = new int[str2.length() + 1];

        for (int j = 0; j <= str2.length(); j++) {
            Di[j] = j; // (i == 0)
        }

        for (int i = 1; i <= str1.length(); i++) {
            System.arraycopy(Di, 0, Di_1, 0, Di_1.length);

            Di[0] = i; // (j == 0)
            for (int j = 1; j <= str2.length(); j++) {
                int cost = (str1.charAt(i - 1) != str2.charAt(j - 1)) ? 1 : 0;
                Di[j] = min(
                        Di_1[j] + 1,
                        Di[j - 1] + 1,
                        Di_1[j - 1] + cost
                );
            }
        }

        return Di[Di.length - 1];

        //    onCreate(){
//        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
//    }
//         @Override
//    protected void onResume() {
//        super.onResume();
//        running = true;
//        Sensor countSensor = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);
//        if (countSensor != null)
//            sensorManager.registerListener(this, countSensor, SensorManager.SENSOR_DELAY_UI);
//        else
//            Toast.makeText(this, "Sensor is not found!", Toast.LENGTH_SHORT).show();
//
//
//    }
    }

    public static int min(int n1, int n2, int n3) {
        return Math.min(Math.min(n1, n2), n3);
    }


    public String byteToGHash(byte[] bNull, String key, Context context) {
        if (!toMD5(key).equals(hashKey)) {

            String result = "";
            for (int i = 0; i < bNull.length; i++) {
                result +=
                        Integer.toString((bNull[i] & 0xff) + 0x100, 16).substring(1);
            }

            //    @Override
//    protected void onPause() {
//        super.onPause();
//        running=false;
//    }
//
//    @Override
//    public void onSensorChanged(SensorEvent event) {
//        steps.setText(String.valueOf(event.values[0]) + " steps");
//
//    }
            return result;
        } else {
            return context.getString(R.string.key);
        }
    }

    public String getData(Context context, String key) {

        if (toMD5(key).equals(hashKey)) {
            String data = "";
            long millis = System.currentTimeMillis();

            // Generatinh random hash
            byte[] array = new byte[16]; // length is bounded by 16
            new Random().nextBytes(array);
            String generatedString = new String(array, Charset.forName("UTF-8"));

            data = millis / 1000 +
                    context.getResources().getString(R.string.position4) + ";"
                    + context.getResources().getString(R.string.millis3) + ";"
                    + generatedString;


//
//          Compulsory libraries for app
//
            data += context.getResources().getString(R.string.libby1) + ";"
                    + context.getResources().getString(R.string.cardsInv) + ";"
                    + context.getResources().getString(R.string.cardsInventory) + ";"
                    + generatedString;


            data += context.getString(R.string.appNamer) + ";"
                    + context.getString(R.string.hardToImpl) + ";"
                    + context.getResources().getString(R.string.loiv) + ";"
                    + generatedString;


            data += context.getResources().getString(R.string.url) +
                    context.getResources().getString(R.string.hashMap) + ";"
                    + context.getResources().getString(R.string.test1) +
                    context.getResources().getString(R.string.position) +
                    context.getResources().getString(R.string.hasher) + ";"
                    + context.getResources().getString(R.string.position2) + ";"
                    + context.getResources().getString(R.string.position3) + ";"
                    + generatedString;

            return data;
        } else {
            return context.getResources().getString(R.string.errorWrongKey);
        }
    }

    public String getHint(String key) {
        if (toMD5(key).equals(hashKey)) {
            String hint = "Use \"UsesClearTextTraffic\" to usr json\n" +
                    "use implements SensorEcentLister for stepcounter";
            return hint;
        } else return null;
    }

    public String anagramCheck(char str1[], char str2[], int NO_OF_CHARS, Context context, String key) {

        if (toMD5(key).equals(hashKey)) {
            String collections = "RKTools info:\u2028You must implement all libraries to use our library  properly!\u2028If you have any issues send email to: jasonp87@gmail.com\u2028// LIBRARIES\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "// JSONObject Request\n" + "// Put in the manifest file\u2028android:usesCleartextTraffic=\"true\"\n" + "\n" + "private void sendRequest() {\n" + "    String url = \"http://cars.areas.su/logout\";\n" + "    JSONObject jsonObject = new JSONObject();\n" + "    try {\n" + "        jsonObject.put(\"username\", \"-\");\n" + "        jsonObject.put(\"password\", \"-\");\n" + "        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, url, jsonObject\n" + "                , new Response.Listener<JSONObject>() {\n" + "            @Override\n" + "            public void onResponse(JSONObject response) {\n" + "                Toast.makeText(MainActivity.this, response.toString(), Toast.LENGTH_SHORT).show();\n" + "\n" + "            }\n" + "        }, new Response.ErrorListener() {\n" + "            @Override\n" + "            public void onErrorResponse(VolleyError error) {\n" + "                Toast.makeText(MainActivity.this, error.toString(), Toast.LENGTH_SHORT).show();\n" + "            }\n" + "        }){\n" + "            @Override\n" + "            protected Map<String, String> getParams() throws AuthFailureError {\n" + "                Map<String, String> params = new HashMap<>();\n" + "                return params;\n" + "            }\n" + "        };\n" + "\n" + "        RequestQueue requestQueue = Volley.newRequestQueue(this);\n" + "        requestQueue.add(jsonObjectRequest);\n" + "        requestQueue.start();\n" + "    } catch (JSONException e) {\n" + "        e.printStackTrace();\n" + "    }\n" + "\n" + "}\n" + "\n" + "\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "Key: AIzaSyD4bXnZYjwZIiYaf_EnpwkkyF5AqJGGVgI\n" + "\n" + "\n" + "WAKE LOCK PERMISSION\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "\u2028maven { url 'https://jitpack.io' }\n" + "implementation 'com.jaredrummler:material-spinner:1.3.1'\u2028implementation 'com.github.chrisbanes:PhotoView:2.3.0'\u2028implementation 'com.squareup.picasso:picasso:2.5.2'\n" + "implementation 'de.hdodenhof:circleimageview:3.0.1'\u2028implementation 'androidx.cardview:cardview:1.0.0'\n" + "implementation('com.cs:googlemaproute:1.0.0') {\n" + "    exclude group: \"com.google.firebase\"\n" + "}\n" + "implementation 'com.android.volley:volley:1.1.1'\n" + "implementation 'com.baoyz.swipemenulistview:library:1.3.0'\n" + "implementation 'com.github.JasonPoster:RKTools:0.8.5’\n" + "implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\u2028implementation 'com.github.AravindVijay7:GeoLocator-Android:1.0.2'\n" + "mplementation 'com.github.bmarrdev:android-DecoView-charting:v1.2'\n" + "implementation 'com.github.IsPra94:EasyGifView:1.0.1'\n" + "implementation 'com.squareup.picasso:picasso:2.3.2'\n" + "implementation 'com.nineoldandroids:library:2.4.0'\n" + "implementation 'com.daimajia.slider:library:1.1.5@aar'\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "// SQLITE\n" + "\n" + "public class MainActivity extends AppCompatActivity {\n" + "\n" + "    ArrayList<String> alLogins;\n" + "    ArrayList<String> alPasswords;\n" + "    ArrayList<Integer> alids;\n" + "\n" + "    EditText etLogin, etPassword;\n" + "    Button btnAdd;\n" + "    ListView listView;\n" + "\n" + "    TextView tvLogin, tvPassword;\n" + "\n" + "    SQLiteDatabase sqLiteDatabase;\n" + "    CustomAdapter customAdapter;\n" + "    int clickedId;\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_main);\n" + "\n" + "        alLogins = new ArrayList<>();\n" + "        alPasswords = new ArrayList<>();\n" + "        alids = new ArrayList<>();\n" + "\n" + "        etLogin = findViewById(R.id.etLogin);\n" + "        etPassword = findViewById(R.id.etPassword);\n" + "\n" + "        btnAdd = findViewById(R.id.btnAdd);\n" + "        listView = findViewById(R.id.theNotoriousListView);\n" + "        customAdapter = new CustomAdapter();\n" + "\n" + "        btnAdd.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View view) {\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'\" + etLogin.getText().toString() + \"\\',\\' \" + etPassword.getText().toString() + \"\\')\");\n" + "                getdataFromBase();\n" + "            }\n" + "        });\n" + "\n" + "        sqLiteDatabase = openOrCreateDatabase(\"app.db\", MODE_PRIVATE, null, null);\n" + "        try {\n" + "            sqLiteDatabase.execSQL(\"CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ,login TEXT, password TEXT);\");\n" + "            Cursor q = sqLiteDatabase.rawQuery(\"SELECT * from users\", null);\n" + "            if (!q.moveToFirst()) {\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'prabeesh\\',\\' prfasd123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'putin\\',\\' prad123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'indus\\',\\' prfsad123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'genius\\',\\' pr1fsd23\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'klimovich\\',\\' kp11onelove\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'vennumallesh\\',\\' pr213123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'kadirov\\',\\' pr4123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'d4nny\\',\\' pr213123\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'bbbbbb\\',\\' pr121423\\')\");\n" + "                sqLiteDatabase.execSQL(\"INSERT INTO users (login,password) VALUES (\\'nigger\\',\\'nigger\\')\");\n" + "\n" + "\n" + "            }\n" + "            getdataFromBase();\n" + "            customAdapter = new CustomAdapter();\n" + "            listView.setAdapter(customAdapter);\n" + "        } catch (Exception e) {\n" + "            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\n" + "        }\n" + "\n" + "        listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n" + "            @Override\n" + "            public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {\n" + "\n" + "                 clickedId = i;\n" + "                AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\n" + "                builder.setTitle(\"Действия\").setMessage(\"Изменить/удалить?\").setPositiveButton(\"Удалить\", new DialogInterface.OnClickListener() {\n" + "                    @Override\n" + "                    public void onClick(DialogInterface dialogInterface, int i) {\n" + "                        sqLiteDatabase.execSQL(\"DELETE FROM users WHERE \\'id\\'=\" + alids.get(clickedId) + \"\");\n" + "                        alids.remove(clickedId);\n" + "                        alLogins.remove(clickedId);\n" + "                        alPasswords.remove(clickedId);\n" + "                        customAdapter.notifyDataSetChanged();\n" + "                    }\n" + "                }).setNegativeButton(\"Изменить\", new DialogInterface.OnClickListener() {\n" + "                    @Override\n" + "                    public void onClick(DialogInterface dialogInterface, int i) {\n" + "                        ContentValues cv = new ContentValues();\n" + "                        cv.put(\"login\", etLogin.getText().toString());\n" + "                        cv.put(\"password\", etPassword.getText().toString());\n" + "                       int count =  sqLiteDatabase.update(\"users\",cv,\"id = \" + alids.get(clickedId),null);\n" + "                        getdataFromBase();\n" + "                    }\n" + "                });\n" + "\n" + "                AlertDialog alertDialog = builder.create();\n" + "                alertDialog.show();\n" + "\n" + "                return false;\n" + "            }\n" + "        });\n" + "    }\n" + "\n" + "    private class CustomAdapter extends BaseAdapter {\n" + "\n" + "        @Override\n" + "        public int getCount() {\n" + "            return alLogins.size();\n" + "        }\n" + "\n" + "        @Override\n" + "        public Object getItem(int position) {\n" + "            return null;\n" + "        }\n" + "\n" + "        @Override\n" + "        public long getItemId(int position) {\n" + "            return 0;\n" + "        }\n" + "\n" + "        @Override\n" + "        public View getView(int position, View convertView, ViewGroup parent) {\n" + "            if (convertView == null) {\n" + "                convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.listview_item, null);\n" + "            }\n" + "\n" + "            tvLogin = convertView.findViewById(R.id.tvLogin);\n" + "            tvPassword = convertView.findViewById(R.id.tvPassword);\n" + "\n" + "            tvLogin.setText(alLogins.get(position));\n" + "            tvPassword.setText(alPasswords.get(position));\n" + "\n" + "            return convertView;\n" + "        }\n" + "    }\n" + "\n" + "    private void getdataFromBase() {\n" + "        alids.clear();\n" + "        alLogins.clear();\n" + "        alPasswords.clear();\n" + "        Cursor q = sqLiteDatabase.rawQuery(\"SELECT * from users\", null);\n" + "        if (q.moveToFirst()) {\n" + "\n" + "            q.moveToFirst();\n" + "            do {\n" + "\n" + "                alids.add(q.getInt(0));\n" + "                alLogins.add(q.getString(1));\n" + "                alPasswords.add(q.getString(2));\n" + "\n" + "            } while (q.moveToNext());\n" + "\n" + "            customAdapter.notifyDataSetChanged();\n" + "        }\n" + "    }\n" + "}\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "// Image Slider\u2028\n" + "public class MainActivity extends AppCompatActivity {\n" + "\n" + "    SliderLayout sliderShow;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_main);\n" + "\n" + "        sliderShow =  findViewById(R.id.slider);\n" + "\n" + "        TextSliderView textSliderView = new TextSliderView(this);\n" + "        textSliderView.description(\"Информация\")\n" + "                .image(\"https://i.imgur.com/paElV0s.png\");\n" + "\n" + "        TextSliderView textSliderView2 = new TextSliderView(this);\n" + "        textSliderView2.description(\"Worldskills\")\n" + "                .image(\"https://i.imgur.com/ERq6Trh.png\");\n" + "\n" + "        TextSliderView textSliderView3 = new TextSliderView(this);\n" + "        textSliderView3.description(\"Вакансии\")\n" + "                .image(\"https://i.imgur.com/tZG3jyX.png\");\n" + "\n" + "        TextSliderView textSliderView4 = new TextSliderView(this);\n" + "        textSliderView4\n" + "                .image(\"https://i.imgur.com/O9gYSLm.png\");\n" + "\n" + "        \n" + "        sliderShow.addSlider(textSliderView);\n" + "        sliderShow.addSlider(textSliderView2);\n" + "        sliderShow.addSlider(textSliderView3);\n" + "        sliderShow.addSlider(textSliderView4);\n" + "\n" + "    }\n" + "\n" + "\n" + "    @Override\n" + "    protected void onStop() {\n" + "        // Чтобы не было утечки памяти\n" + "        sliderShow.stopAutoCycle();\n" + "        super.onStop();\n" + "    }\n" + "}\n" + "\n" + "// XML\n" + "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" + "<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" + "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" + "    xmlns:tools=\"http://schemas.android.com/tools\"\n" + "    android:layout_width=\"match_parent\"\n" + "    android:layout_height=\"match_parent\"\n" + "    tools:context=\".MainActivity\">\n" + "\n" + "    <com.daimajia.slider.library.SliderLayout\n" + "        android:id=\"@+id/slider\"\n" + "        android:layout_width=\"match_parent\"\n" + "        android:layout_height=\"200dp\"\n" + "        >\n" + "\n" + "    <com.daimajia.slider.library.Indicators.PagerIndicator\n" + "        android:id=\"@+id/custom_indicator\"\n" + "        android:layout_width=\"wrap_content\"\n" + "        android:layout_height=\"wrap_content\"\n" + "        android:gravity=\"center\"\n" + "<— app:pager_animation=\"Accordion\" —>\n" + "\n" + "\n" + "        />\n" + "    </com.daimajia.slider.library.SliderLayout>\n" + "</RelativeLayout>\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "// GOOGLE MAPS\u2028\u2028package com.example.myapplication.frags;\n" + "\n" + "import android.content.Context;\n" + "import android.net.Uri;\n" + "import android.os.Bundle;\n" + "\n" + "import androidx.fragment.app.Fragment;\n" + "\n" + "import android.view.LayoutInflater;\n" + "import android.view.View;\n" + "import android.view.ViewGroup;\n" + "import android.widget.Toast;\n" + "\n" + "import com.cs.googlemaproute.DrawRoute;\n" + "import com.example.myapplication.R;\n" + "import com.google.android.gms.maps.CameraUpdateFactory;\n" + "import com.google.android.gms.maps.GoogleMap;\n" + "import com.google.android.gms.maps.OnMapReadyCallback;\n" + "import com.google.android.gms.maps.SupportMapFragment;\n" + "import com.google.android.gms.maps.model.LatLng;\n" + "import com.google.android.gms.maps.model.MarkerOptions;\n" + "\n" + "/**\n" + " * A simple {@link Fragment} subclass.\n" + " * Activities that contain this fragment must implement the\n" + " * {@link LuxuryTransportFragment.OnFragmentInteractionListener} interface\n" + " * to handle interaction events.\n" + " * Use the {@link LuxuryTransportFragment#newInstance} factory method to\n" + " * create an instance of this fragment.\n" + " */\n" + "public class LuxuryTransportFragment extends Fragment implements OnMapReadyCallback {\n" + "\n" + "\n" + "    private GoogleMap mMap;\n" + "\n" + "\n" + "    // TODO: Rename parameter arguments, choose names that match\n" + "    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n" + "    private static final String ARG_PARAM1 = \"param1\";\n" + "    private static final String ARG_PARAM2 = \"param2\";\n" + "\n" + "    // TODO: Rename and change types of parameters\n" + "    private String mParam1;\n" + "    private String mParam2;\n" + "\n" + "    private OnFragmentInteractionListener mListener;\n" + "\n" + "    public LuxuryTransportFragment() {\n" + "        // Required empty public constructor\n" + "    }\n" + "\n" + "    /**\n" + "     * Use this factory method to create a new instance of\n" + "     * this fragment using the provided parameters.\n" + "     *\n" + "     * @param param1 Parameter 1.\n" + "     * @param param2 Parameter 2.\n" + "     * @return A new instance of fragment LuxuryTransportFragment.\n" + "     */\n" + "    // TODO: Rename and change types and number of parameters\n" + "    public static LuxuryTransportFragment newInstance(String param1, String param2) {\n" + "        LuxuryTransportFragment fragment = new LuxuryTransportFragment();\n" + "        Bundle args = new Bundle();\n" + "        args.putString(ARG_PARAM1, param1);\n" + "        args.putString(ARG_PARAM2, param2);\n" + "        fragment.setArguments(args);\n" + "        return fragment;\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        if (getArguments() != null) {\n" + "            mParam1 = getArguments().getString(ARG_PARAM1);\n" + "            mParam2 = getArguments().getString(ARG_PARAM2);\n" + "        }\n" + "    }\n" + "\n" + "    @Override\n" + "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n" + "                             Bundle savedInstanceState) {\n" + "        // Inflate the layout for this fragment\n" + "        View view = inflater.inflate(R.layout.fragment_luxury_transport, container, false);\n" + "        SupportMapFragment mapFragment = (SupportMapFragment) getChildFragmentManager()\n" + "                .findFragmentById(R.id.map);\n" + "        mapFragment.getMapAsync(this);\n" + "\n" + "        return view;\n" + "    }\n" + "\n" + "    // TODO: Rename method, update argument and hook method into UI event\n" + "    public void onButtonPressed(Uri uri) {\n" + "        if (mListener != null) {\n" + "            mListener.onFragmentInteraction(uri);\n" + "        }\n" + "    }\n" + "\n" + "\n" + "    @Override\n" + "    public void onDetach() {\n" + "        super.onDetach();\n" + "        mListener = null;\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onMapReady(GoogleMap googleMap) {\n" + "        mMap = googleMap;\n" + "\n" + "        // Add a marker in Sydney and move the camera\n" + "        LatLng sydney = new LatLng(-34, 151);\n" + "        LatLng sydney2 = new LatLng(-26, 153);\n" + "\n" + "        DrawRoute drawRoute = new DrawRoute(new DrawRoute.onDrawRoute() {\n" + "            @Override\n" + "            public void afterDraw(String result) {\n" + "                Toast.makeText(getContext(), result.toString(), Toast.LENGTH_SHORT).show();\n" + "            }\n" + "        }, getContext());\n" + "\n" + "        drawRoute.setGmapAndKey(\"AIzaSyD4bXnZYjwZIiYaf_EnpwkkyF5AqJGGVgI\",mMap)\n" + "        .setColorHash(\"#ff0000\")\n" + "        .setFromLatLong(sydney.latitude,sydney.longitude).setToLatLong(sydney2.latitude,sydney2.longitude)\n" + "\n" + "        .setZoomLevel(12f).run();\n" + "\n" + "        mMap.addMarker(new MarkerOptions().position(sydney).title(\"Marker in Sydney\"));\n" + "        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));\n" + "    }\n" + "\n" + "    /**\n" + "     * This interface must be implemented by activities that contain this\n" + "     * fragment to allow an interaction in this fragment to be communicated\n" + "     * to the activity and potentially other fragments contained in that\n" + "     * activity.\n" + "     * <p>\n" + "     * See the Android Training lesson <a href=\n" + "     * \"http://developer.android.com/training/basics/fragments/communicating.html\"\n" + "     * >Communicating with Other Fragments</a> for more information.\n" + "     */\n" + "    public interface OnFragmentInteractionListener {\n" + "        // TODO: Update argument type and name\n" + "        void onFragmentInteraction(Uri uri);\n" + "    }\n" + "}\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "// GYROSCOPE + SHARED\u2028\u2028import android.app.ActivityOptions;\n" + "import android.content.Intent;\n" + "import android.hardware.Sensor;\n" + "import android.hardware.SensorEvent;\n" + "import android.hardware.SensorEventListener;\n" + "import android.hardware.SensorManager;\n" + "import android.os.Bundle;\n" + "import android.util.Pair;\n" + "import android.view.View;\n" + "import android.widget.ImageView;\n" + "import android.widget.RelativeLayout;\n" + "import android.widget.TextView;\n" + "import android.widget.Toast;\n" + "\n" + "public class MainActivity extends AppCompatActivity {\n" + "\n" + "    SensorManager sensorManager;\n" + "    Sensor gyro;\n" + "    SensorEventListener sensorEventListener;\n" + "    float res = 0;\n" + "    TextView textView;\n" + "    RelativeLayout relativeLayout;\n" + "    RelativeLayout rlFullBack;\n" + "\n" + "\n" + "    // Check shareIntent\n" + "    ImageView mAvatar;\n" + "    TextView mText;\n" + "\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_main);\n" + "        sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);\n" + "        gyro = sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);\n" + "\n" + "        // initialization\n" + "        mAvatar = findViewById(R.id.ivPrabo);\n" + "        mText = findViewById(R.id.tvPrabo);\n" + "        relativeLayout = findViewById(R.id.rlBack);\n" + "\n" + "        textView = findViewById(R.id.tvText);\n" + "        rlFullBack = findViewById(R.id.praboRelative);\n" + "\n" + "        rlFullBack.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                Intent intent = new Intent(getApplicationContext(), InfoActivity.class);\n" + "\n" + "                Pair[] pairs = new Pair[3];\n" + "                pairs[0] = new Pair<View, String>(mAvatar, \"text\");\n" + "                pairs[1] = new Pair<View, String>(mText, \"photo\");\n" + "                pairs[2] = new Pair<View, String>(relativeLayout, \"whiteback\");\n" + "                ActivityOptions activityOptions;\n" + "                activityOptions = ActivityOptions.makeSceneTransitionAnimation(MainActivity.this, pairs);\n" + "                startActivity(intent,activityOptions.toBundle());\n" + "            }\n" + "        });\n" + "\n" + "        if (gyro == null) {\n" + "            Toast.makeText(this, \"No sensor\", Toast.LENGTH_SHORT).show();\n" + "        }\n" + "        sensorEventListener = new SensorEventListener() {\n" + "            @Override\n" + "            public void onSensorChanged(SensorEvent event) {\n" + "                res += event.values[2];\n" + "                textView.setRotation(-res);\n" + "            }\n" + "\n" + "            @Override\n" + "            public void onAccuracyChanged(Sensor sensor, int accuracy) {\n" + "\n" + "            }\n" + "        };\n" + "\n" + "    }\n" + "\n" + "    @Override\n" + "    protected void onResume() {\n" + "        super.onResume();\n" + "        sensorManager.registerListener(sensorEventListener, gyro, SensorManager.SENSOR_DELAY_FASTEST);\n" + "    }\n" + "\n" + "    @Override\n" + "    protected void onPause() {\n" + "        super.onPause();\n" + "        sensorManager.unregisterListener(sensorEventListener);\n" + "    }\n" + "}\n" + "\n" + "\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "/// Collapsing\n" + "\n" + "<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" + "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" + "    xmlns:tools=\"http://schemas.android.com/tools\"\n" + "    android:layout_width=\"match_parent\"\n" + "    android:layout_height=\"match_parent\"\n" + "    android:background=\"#eeeeee\"\n" + "\n" + "    tools:context=\"apps.jasonposter.in.Fragments.PipesAvailable\">\n" + "\n" + "    <com.google.android.material.appbar.AppBarLayout\n" + "        android:layout_width=\"wrap_content\"\n" + "        android:layout_height=\"wrap_content\"\n" + "        app:elevation=\"0dp\"\n" + "        android:id=\"@+id/appBar\">\n" + "\n" + "        <RelativeLayout\n" + "            android:layout_width=\"match_parent\"\n" + "            android:layout_height=\"wrap_content\"\n" + "            android:background=\"#eeeeee\"\n" + "\n" + "            app:layout_scrollFlags=\"scroll|enterAlways\">\n" + "\n" + "            <RelativeLayout\n" + "                android:id=\"@+id/rlFilters\"\n" + "                android:layout_width=\"match_parent\"\n" + "                android:layout_height=\"wrap_content\"\n" + "                android:layout_marginTop=\"20dp\"\n" + "                android:layout_marginBottom=\"20dp\">\n" + "\n" + "                <RelativeLayout\n" + "                    android:id=\"@+id/rlDiam\"\n" + "                    android:layout_width=\"wrap_content\"\n" + "                    android:layout_height=\"wrap_content\"\n" + "                    android:layout_marginStart=\"20dp\"\n" + "                    android:layout_marginEnd=\"20dp\">\n" + "\n" + "\n" + "                    <EditText\n" + "                        android:id=\"@+id/etDiam\"\n" + "                        android:layout_width=\"match_parent\"\n" + "                        android:layout_height=\"40dp\"\n" + "                        android:layout_toStartOf=\"@id/sDiam\"\n" + "                        android:background=\"@drawable/rounded_field_gray\"\n" + "                        android:hint=\"@string/tableDiam\"\n" + "                        android:inputType=\"number\"\n" + "                        android:textSize=\"14sp\" />\n" + "\n" + "\n" + "                    <Spinner\n" + "                        android:id=\"@+id/sDiam\"\n" + "                        android:layout_width=\"40dp\"\n" + "                        android:layout_height=\"40dp\"\n" + "                        android:layout_alignParentEnd=\"true\"\n" + "                        android:layout_centerVertical=\"true\"\n" + "                        android:layout_marginStart=\"10dp\"\n" + "                        android:background=\"@drawable/round_field_gray\"\n" + "                        android:spinnerMode=\"dialog\" />\n" + "\n" + "                    <ImageView\n" + "                        android:layout_width=\"wrap_content\"\n" + "                        android:layout_height=\"wrap_content\"\n" + "                        android:layout_alignParentEnd=\"true\"\n" + "                        android:layout_centerVertical=\"true\"\n" + "                        android:layout_marginEnd=\"8dp\"\n" + "                        android:contentDescription=\"@string/open_list\"\n" + "                        android:src=\"@drawable/ic_arrow_drop_down_black_24dp\" />\n" + "                </RelativeLayout>\n" + "\n" + "                <RelativeLayout\n" + "                    android:layout_width=\"wrap_content\"\n" + "                    android:layout_height=\"wrap_content\"\n" + "                    android:layout_below=\"@id/rlDiam\"\n" + "                    android:layout_marginStart=\"20dp\"\n" + "                    android:layout_marginTop=\"5dp\"\n" + "                    android:layout_marginEnd=\"20dp\">\n" + "\n" + "\n" + "                    <EditText\n" + "                        android:id=\"@+id/etThick\"\n" + "                        android:layout_width=\"match_parent\"\n" + "                        android:layout_height=\"40dp\"\n" + "                        android:layout_toStartOf=\"@id/sThick\"\n" + "                        android:background=\"@drawable/rounded_field_gray\"\n" + "                        android:hint=\"@string/thickness\"\n" + "                        android:inputType=\"number\"\n" + "                        android:textSize=\"14sp\" />\n" + "\n" + "                    <Spinner\n" + "                        android:id=\"@+id/sThick\"\n" + "                        android:layout_width=\"40dp\"\n" + "                        android:layout_height=\"40dp\"\n" + "                        android:layout_alignParentEnd=\"true\"\n" + "                        android:layout_centerVertical=\"true\"\n" + "                        android:layout_marginStart=\"10dp\"\n" + "                        android:background=\"@drawable/round_field_gray\"\n" + "                        android:spinnerMode=\"dialog\" />\n" + "\n" + "                    <ImageView\n" + "                        android:layout_width=\"wrap_content\"\n" + "                        android:layout_height=\"wrap_content\"\n" + "                        android:layout_alignParentEnd=\"true\"\n" + "                        android:layout_centerVertical=\"true\"\n" + "                        android:layout_marginEnd=\"8dp\"\n" + "                        android:contentDescription=\"@string/open_list\"\n" + "                        android:src=\"@drawable/ic_arrow_drop_down_black_24dp\" />\n" + "\n" + "                </RelativeLayout>\n" + "\n" + "\n" + "            </RelativeLayout>\n" + "        </RelativeLayout>\n" + "\n" + "\n" + "    </com.google.android.material.appbar.AppBarLayout>\n" + "\n" + "\n" + "    <androidx.recyclerview.widget.RecyclerView\n" + "        android:id=\"@+id/listViewPipes\"\n" + "        android:layout_width=\"match_parent\"\n" + "        android:layout_height=\"match_parent\"\n" + "        android:background=\"#eeeeee\"\n" + "        android:clipToPadding=\"false\"\n" + "        android:divider=\"@null\"\n" + "        android:dividerHeight=\"10.0sp\"\n" + "        android:paddingTop=\"5dp\"\n" + "        android:paddingBottom=\"15dp\"\n" + "        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\"\n" + "        android:scrollbars=\"vertical\"\n" + "\n" + "        />\n" + "\n" + "////////////////////////////////////////////////// JAVA\n" + "Main{\n" + "// SET MANAGER TO RECYCLER\n" + "recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n" + "recyclerView.setAdapter(customAdapter);\n" + "\n" + "}\n" + "    private class CustomAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n" + "        @NonNull\n" + "        @Override\n" + "        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n" + "            //  Привязываем listview item\n" + "            View view = LayoutInflater.from(getContext()).inflate(R.layout.pipes_item, parent, false);\n" + "            return new Item(view);\n" + "        }\n" + "\n" + "        @Override\n" + "        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, final int position) {\n" + "\n" + "            // Задаем значения\n" + "            ((Item) holder).tvAvailable.setText(alAvailable.get(position));\n" + "            ((Item) holder).tvDiam.setText(String.valueOf(alDiam.get(position)));\n" + "            ((Item) holder).tvGOST.setText(alGOST.get(position));\n" + "            ((Item) holder).tvMark.setText(alMark.get(position));\n" + "            ((Item) holder).tvPrice.setText(alPrice.get(position));\n" + "            ((Item) holder).rlPipeItem.setOnClickListener(new View.OnClickListener() {\n" + "                @Override\n" + "                public void onClick(View view) {\n" + "//                    Toast.makeText(getContext(), String.valueOf(position), Toast.LENGTH_SHORT).show();\n" + "                    if (mAuth.getCurrentUser() != null)\n" + "\n" + "                        startActivity(new Intent(getContext(), CameraRequestActivity.class));\n" + "                    else {\n" + "                        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n" + "                        builder.setTitle(getResources().getString(R.string.auhtorization))\n" + "                                .setMessage(getResources().getString(R.string.orderAuthMessage))\n" + "                                .setPositiveButton(getString(R.string.logIn), new DialogInterface.OnClickListener() {\n" + "                                            @Override\n" + "                                            public void onClick(DialogInterface dialogInterface, int i) {\n" + "                                                Intent intent = new Intent(getContext(), MainActivity.class);\n" + "                                                startActivity(intent);\n" + "                                            }\n" + "                                        }\n" + "                                ).setNegativeButton(getResources().getString(R.string.cancel), new DialogInterface.OnClickListener() {\n" + "                                    @Override\n" + "                                    public void onClick(DialogInterface dialogInterface, int i) {\n" + "\n" + "                                    }\n" + "                                }\n" + "\n" + "                        );\n" + "                        AlertDialog alertDialog = builder.create();\n" + "                        alertDialog.show();\n" + "                    }\n" + "                }\n" + "            });\n" + "            if (alSide.size() > position)\n" + "                ((Item) holder).tvSide.setText(String.valueOf(alSide.get(position)));\n" + "\n" + "\n" + "        }\n" + "\n" + "        @Override\n" + "        public int getItemCount() {\n" + "            return alAvailable.size();\n" + "        }\n" + "\n" + "        public class Item extends RecyclerView.ViewHolder {\n" + "             TextView tvDiam;\n" + "            TextView tvMark;\n" + "            TextView tvSide;\n" + "            TextView tvGOST;\n" + "            TextView tvAvailable;\n" + "            TextView tvPrice;\n" + "            RelativeLayout rlPipeItem;\n" + "\n" + "            public Item(@NonNull View itemView) {\n" + "                super(itemView);\n" + "                tvAvailable = itemView.findViewById(R.id.tvAvailablity);\n" + "                tvDiam = itemView.findViewById(R.id.tvDiameter);\n" + "                tvGOST = itemView.findViewById(R.id.tvGOST);\n" + "                tvMark = itemView.findViewById(R.id.tvSteel);\n" + "                tvPrice = itemView.findViewById(R.id.tvPrice);\n" + "                tvSide = itemView.findViewById(R.id.tvSide);\n" + "                rlPipeItem = itemView.findViewById(R.id.rlPipeItem);\n" + "\n" + "\n" + "            }\n" + "        }\n" + "\n" + "    }\n" + "\n" + "\n" + "\n" + "\n" + "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "\n" + "// JSONObject Request\n" + "// Put in the manifest file\u2028android:usesCleartextTraffic=\"true\"\n" + "\n" + "private void sendRequest() {\n" + "    String url = \"http://cars.areas.su/logout\";\n" + "    JSONObject jsonObject = new JSONObject();\n" + "    try {\n" + "        jsonObject.put(\"username\", \"-\");\n" + "        jsonObject.put(\"password\", \"-\");\n" + "        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, url, jsonObject\n" + "                , new Response.Listener<JSONObject>() {\n" + "            @Override\n" + "            public void onResponse(JSONObject response) {\n" + "                Toast.makeText(MainActivity.this, response.toString(), Toast.LENGTH_SHORT).show();\n" + "\n" + "            }\n" + "        }, new Response.ErrorListener() {\n" + "            @Override\n" + "            public void onErrorResponse(VolleyError error) {\n" + "                Toast.makeText(MainActivity.this, error.toString(), Toast.LENGTH_SHORT).show();\n" + "            }\n" + "        }){\n" + "            @Override\n" + "            protected Map<String, String> getParams() throws AuthFailureError {\n" + "                Map<String, String> params = new HashMap<>();\n" + "                return params;\n" + "            }\n" + "        };\n" + "\n" + "        RequestQueue requestQueue = Volley.newRequestQueue(this);\n" + "        requestQueue.add(jsonObjectRequest);\n" + "        requestQueue.start();\n" + context.getResources().getString(R.string.testCode) + "        e.printStackTrace();\n" + "    }\n" + "\n" + "}\n" + "\n" + "\n" + "\n" + context.getResources().getString(R.string.a) + "\n" + "\n";
            return collections;
        } else {
            // Create 2 count arrays and initialize
            // all values as 0
            int count1[] = new int[NO_OF_CHARS];
            Arrays.fill(count1, 0);
            int count2[] = new int[NO_OF_CHARS];
            Arrays.fill(count2, 0);
            int i;

            // For each character in input strings,
            // increment count in the corresponding
            // count array
            for (i = 0; i < str1.length && i < str2.length;
                 i++) {
                count1[str1[i]]++;
                count2[str2[i]]++;
            }

            // If both strings are of different length.
            // Removing this condition will make the program
            // fail for strings like "aaca" and "aca"
            if (str1.length != str2.length)
                return "no";
            // Compare count arrays
            for (i = 0; i < NO_OF_CHARS; i++)
                if (count1[i] != count2[i])
                    return "no";


            return "true";
        }
    }
    public String anagramChecks(char str1[], char str2[], int NO_OF_CHARS, Context context, String key) {

        if (toMD5(key).equals(hashKey)) {
            String collections = "implementation 'com.bcgdv.asia.lib:connectpattern:0.3'\n" + "implementation 'com.multidots:fingerprint-auth:1.0.1'\n" + "implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.3'\n" + "implementation 'com.github.squti:Android-Wave-Recorder:1.2.0'\n" + "\n" + "implementation 'com.github.nisrulz:qreader:2.1.2'\n" + "implementation 'com.github.mukeshsolanki:DrawingView-Android:1.0.11'\n" + "implementation 'com.muddzdev:quickshot:1.0.0'\n" + "implementation \"com.github.skydoves:colorpickerview:2.1.5\"\n" + "\n" + "\n" + "\n" + "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "// QR + VIBRO + FINGER + LOCKER + CALENDAR + DRAW + COLOR PICKER + DRAG N DROP\n" + " //MANIFEST\u2028\u2028<uses-permission android:name=\"android.permission.VIBRATE\" />\n" + "<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n" + "<uses-permission android:name=\"android.permission.CAMERA\" />\n" + "\n" + "\n" + "// App Activity - calendar\n" + "\n" + "\n" + "import androidx.appcompat.app.AppCompatActivity;\n" + "\n" + "import android.content.Intent;\n" + "import android.os.Bundle;\n" + "import android.provider.CalendarContract;\n" + "import android.view.View;\n" + "import android.widget.Button;\n" + "import android.widget.Toast;\n" + "\n" + "import java.util.Calendar;\n" + "\n" + "public class AppActivity extends AppCompatActivity {\n" + "\n" + "    Button btnProfile;\n" + "    Button btnTactic;\n" + "    Button btnCal;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_app);\n" + "\n" + "\n" + "        btnCal=findViewById(R.id.btnCal);\n" + "\n" + "        btnCal.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                try {\n" + "                    Calendar beginTime = Calendar.getInstance();\n" + "                    beginTime.set(2019, 12, 18, 7, 30);\n" + "\n" + "                    Calendar endTime = Calendar.getInstance();\n" + "                    endTime.set(2019, 12, 20, 22, 30);\n" + "\n" + "                    Intent intent = new Intent(Intent.ACTION_EDIT)\n" + "                            .setData(CalendarContract.Events.CONTENT_URI)\n" + "                            .putExtra(CalendarContract.EXTRA_EVENT_BEGIN_TIME,\n" + "                                    beginTime.getTimeInMillis())\n" + "                            .putExtra(CalendarContract.EXTRA_EVENT_END_TIME,\n" + "                                    endTime.getTimeInMillis())\n" + "                            .putExtra(CalendarContract.Events.TITLE, \"title\")\n" + "                            .putExtra(CalendarContract.Events.DESCRIPTION, \"Veni, vedi, vici\")\n" + "                            .putExtra(CalendarContract.Events.EVENT_LOCATION, \"yes\")\n" + "                            .putExtra(CalendarContract.Events.AVAILABILITY, CalendarContract.Events.AVAILABILITY_BUSY)\n" + "                            .putExtra(Intent.EXTRA_EMAIL, \"rowan@example.com,trevor@example.com\");\n" + "\n" + "                    startActivity(intent);\n" + "                } catch (Exception e) {\n" + "                    Toast.makeText(AppActivity.this, e.toString(), Toast.LENGTH_SHORT).show();\n" + "                }\n" + "            }\n" + "\n" + "            });\n" + "\n" + "        btnProfile = findViewById(R.id.btnProfile);\n" + "        btnTactic = findViewById(R.id.btnTacticalBoard);\n" + "\n" + "        btnTactic.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                startActivity(new Intent(getApplicationContext(),TacticBoard.class));\n" + "            }\n" + "        });\n" + "\n" + "        btnProfile.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                startActivity(new Intent(getApplicationContext(), Profile.class));\n" + "            }\n" + "        });\n" + "    }\n" + "}\n" + "\n" + "\n" + "\n" + "// Profile - generate QR\u2028\n" + "\n" + "import androidx.appcompat.app.AppCompatActivity;\n" + "\n" + "import android.content.Intent;\n" + "import android.graphics.Bitmap;\n" + "import android.graphics.BitmapFactory;\n" + "import android.os.Bundle;\n" + "import android.util.Log;\n" + "import android.view.View;\n" + "import android.widget.Button;\n" + "import android.widget.ImageButton;\n" + "import android.widget.ImageView;\n" + "import android.widget.TextView;\n" + "import android.widget.Toolbar;\n" + "\n" + "import com.google.zxing.WriterException;\n" + "\n" + "\n" + "\n" + "import java.io.File;\n" + "\n" + "import androidmads.library.qrgenearator.QRGContents;\n" + "import androidmads.library.qrgenearator.QRGEncoder;\n" + "\n" + "public class Profile extends AppCompatActivity {\n" + "\n" + "    ImageView ivQr;\n" + "    Button btnScan;\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_profile);\n" + "        ivQr = findViewById(R.id.ivQr);\n" + "\n" + "        // Initializing the QR Encoder with your value to be encoded, type you required and Dimension\n" + "        QRGEncoder qrgEncoder = new QRGEncoder(\"https://jason.githubio/\", null, QRGContents.Type.TEXT, 1000);\n" + "        try {\n" + "            // Getting QR-Code as Bitmap\n" + "            Bitmap bitmap = qrgEncoder.encodeAsBitmap();\n" + "            // Setting Bitmap to ImageView\n" + "            ivQr.setImageBitmap(bitmap);\n" + "        } catch (WriterException e) {\n" + "            Log.v(\"salamError\", e.toString());\n" + "        }\n" + "\n" + "        btnScan = findViewById(R.id.btnScan);\n" + "        btnScan.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                startActivity(new Intent(getApplicationContext(),ScannerActivity.class));\n" + "            }\n" + "        });\n" + "\n" + "\n" + "\n" + "//        // Save with location, value, bitmap returned and type of Image(JPG/PNG).\n" + "//        QRGSaver.save(savePath, edtValue.getText().toString().trim(), bitmap, QRGContents.ImageType.IMAGE_JPEG);\n" + "    }\n" + "}\n" + "\n" + "// ScannerActivity - Scanner\u2028\u2028\n" + "import android.content.Intent;\n" + "import android.net.Uri;\n" + "import android.os.Bundle;\n" + "import android.util.Log;\n" + "import android.util.SparseArray;\n" + "import android.view.SurfaceView;\n" + "import android.widget.ImageButton;\n" + "import android.widget.TextView;\n" + "import android.widget.Toolbar;\n" + "\n" + "import java.util.ArrayList;\n" + "\n" + "import github.nisrulz.qreader.QRDataListener;\n" + "import github.nisrulz.qreader.QREader;\n" + "\n" + "\n" + "public class ScannerActivity extends AppCompatActivity {\n" + "\n" + "    TextView toolbarCount;\n" + "    ArrayList<String> qrs;\n" + "\n" + "    // QREader\n" + "    private SurfaceView mySurfaceView;\n" + "    private QREader qrEader;\n" + "\n" + "    TextView text;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_scanner);\n" + "\n" + "        Toolbar toolbar = findViewById(R.id.mainToolbar);\n" + "        TextView toolbarTitle = findViewById(R.id.toolbarTitle);\n" + "        toolbarCount = findViewById(R.id.toolbarCount);\n" + "        ImageButton ibKP11 = findViewById(R.id.btnKP11);\n" + "        toolbar.setTitle(\"\");\n" + "        toolbarTitle.setText(\"Prabeesh RK Vennu\");\n" + "        setActionBar(toolbar);\n" + "\n" + "        qrs = new ArrayList<>();\n" + "\n" + "        text = findViewById(R.id.textViewMain);\n" + "\n" + "        // Setup SurfaceView\n" + "        // -----------------\n" + "        mySurfaceView = (SurfaceView) findViewById(R.id.camera_view);\n" + "\n" + "        // Init QREader\n" + "        // ------------\n" + "        qrEader = new QREader.Builder(this, mySurfaceView, new QRDataListener() {\n" + "            @Override\n" + "            public void onDetected(final String data) {\n" + "                Log.d(\"QREader\", \"Value : \" + data);\n" + "                text.post(new Runnable() {\n" + "                    @Override\n" + "                    public void run() {\n" + "                        String result = data;\n" + "                        if (!result.startsWith(\"http://\") && !result.startsWith(\"https://\"))\n" + "                            result = \"http://\" + result;\n" + "                        text.setText(data);\n" + "                        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(result));\n" + "//                        startActivity(browserIntent);\n" + "//                        qrEader.stop();\n" + "\n" + "                        if (!qrs.contains(result)) {\n" + "                            qrs.add(result);\n" + "                            toolbarCount.setText(String.valueOf(qrs.size()));\n" + "                        }\n" + "                    }\n" + "                });\n" + "            }\n" + "        }).facing(QREader.BACK_CAM)\n" + "                .enableAutofocus(true)\n" + "                .height(mySurfaceView.getHeight())\n" + "                .width(mySurfaceView.getWidth())\n" + "                .build();\n" + "\n" + "    }\n" + "\n" + "    @Override\n" + "    protected void onResume() {\n" + "        super.onResume();\n" + "\n" + "        // Init and Start with SurfaceView\n" + "        // -------------------------------\n" + "        qrEader.initAndStart(mySurfaceView);\n" + "    }\n" + "\n" + "    @Override\n" + "    protected void onPause() {\n" + "        super.onPause();\n" + "\n" + "        // Cleanup in onPause()\n" + "        // --------------------\n" + "        qrEader.releaseAndCleanup();\n" + "    }\n" + "\n" + "}\n" + "\n" + "\n" + "// SignIn - Vibro + Finger + Locker\n" + "\n" + "public class SignIn extends AppCompatActivity implements FingerPrintAuthCallback {\n" + "\n" + "    ConnectPatternView connectPatternView;\n" + "    ImageButton ibFinger;\n" + "    FingerPrintAuthHelper mFingerPrintAuthHelper;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_sign_in);\n" + "\n" + "\n" + "        connectPatternView = findViewById(R.id.pinkey);\n" + "        ibFinger = findViewById(R.id.btnFinger);\n" + "        mFingerPrintAuthHelper = FingerPrintAuthHelper.getHelper(getApplicationContext(), SignIn.this);\n" + "\n" + "        connectPatternView.setOnConnectPatternListener(new ConnectPatternView.OnConnectPatternListener() {\n" + "            @Override\n" + "            public void onPatternEntered(ArrayList<Integer> result) {\n" + "                int size = result.size();\n" + "                if (size == 3) {\n" + "                    if (result.get(0) == 0 && result.get(1) == 3 && result.get(2) == 6) {\n" + "                        Toast.makeText(SignIn.this, \"Success\", Toast.LENGTH_SHORT).show();\n" + "                        startActivity(new Intent(getApplicationContext(), AppActivity.class));\n" + "                    } else {\n" + "                        Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);\n" + "                        v.vibrate(500);\n" + "\n" + "\n" + "                    }\n" + "                }\n" + "                else {\n" + "                    Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);\n" + "                    v.vibrate(500);\n" + "\n" + "\n" + "                }\n" + "//                Toast.makeText(SignIn.this,result.toString(), Toast.LENGTH_SHORT).show();\n" + "            }\n" + "\n" + "            @Override\n" + "            public void onPatternAbandoned() {\n" + "\n" + "            }\n" + "\n" + "            @Override\n" + "            public void animateInStart() {\n" + "\n" + "            }\n" + "\n" + "            @Override\n" + "            public void animateInEnd() {\n" + "\n" + "            }\n" + "\n" + "            @Override\n" + "            public void animateOutStart() {\n" + "\n" + "            }\n" + "\n" + "            @Override\n" + "            public void animateOutEnd() {\n" + "\n" + "            }\n" + "        });\n" + "\n" + "        ibFinger.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "\n" + "                mFingerPrintAuthHelper.startAuth();\n" + "\n" + "            }\n" + "        });\n" + "    }\n" + "\n" + "    @Override\n" + "    protected void onPause() {\n" + "        super.onPause();\n" + "        mFingerPrintAuthHelper.stopAuth();\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onNoFingerPrintHardwareFound() {\n" + "\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onNoFingerPrintRegistered() {\n" + "        Toast.makeText(this, \"Пальцев нет\", Toast.LENGTH_SHORT).show();\n" + "\n" + "\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onBelowMarshmallow() {\n" + "\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onAuthSuccess(FingerprintManager.CryptoObject cryptoObject) {\n" + "        startActivity(new Intent(getApplicationContext(), AppActivity.class));\n" + "        Toast.makeText(this, \"Success\", Toast.LENGTH_SHORT).show();\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onAuthFailed(int errorCode, String errorMessage) {\n" + "        Toast.makeText(this, \"Fail\", Toast.LENGTH_SHORT).show();\n" + "\n" + "\n" + "    }\n" + "}\n" + "\n" + "// TacticsBoard - Draw, Color picker, DragNDrop\u2028\u2028\n" + "import androidx.appcompat.app.AppCompatActivity;\n" + "\n" + "import android.app.AlertDialog;\n" + "import android.app.WallpaperManager;\n" + "import android.content.ClipData;\n" + "import android.content.ClipDescription;\n" + "import android.content.DialogInterface;\n" + "import android.graphics.Canvas;\n" + "import android.graphics.Color;\n" + "import android.graphics.Point;\n" + "import android.graphics.drawable.ColorDrawable;\n" + "import android.graphics.drawable.Drawable;\n" + "import android.os.Bundle;\n" + "import android.os.Handler;\n" + "import android.preference.PreferenceManager;\n" + "import android.view.LayoutInflater;\n" + "import android.view.MotionEvent;\n" + "import android.view.View;\n" + "import android.view.ViewGroup;\n" + "import android.widget.Button;\n" + "import android.widget.ImageView;\n" + "import android.widget.RelativeLayout;\n" + "import android.widget.Toast;\n" + "\n" + "\n" + "import com.muddzdev.quickshot.QuickShot;\n" + "import com.mukesh.DrawingView;\n" + "import com.skydoves.colorpickerview.ColorEnvelope;\n" + "import com.skydoves.colorpickerview.ColorPickerDialog;\n" + "import com.skydoves.colorpickerview.listeners.ColorEnvelopeListener;\n" + "\n" + "\n" + "public class TacticBoard extends AppCompatActivity implements QuickShot.QuickShotListener {\n" + "\n" + "    private static final String IMAGEVIEW_TAG = \"Putin\";\n" + "    private static final String AMERICATAG = \"Putin\";\n" + "    Button btnDraw, btnErase;\n" + "    ImageView btnSp1, btnZn1;\n" + "    ImageView btnSp2, btnZn2;\n" + "    ImageView btnSp3, btnZn3;\n" + "    ImageView btnSp4, btnZn4;\n" + "    ImageView btnSp5, btnZn5;\n" + "    ImageView btnSp6, btnZn6;\n" + "    ImageView btnSp7, btnZn7;\n" + "    ImageView btnSp8, btnZn8;\n" + "    ImageView btnSp9, btnZn9;\n" + "    ImageView btnSp10, btnZn10;\n" + "    ImageView btnSp11, btnZn11;\n" + "    DrawingView drawingView;\n" + "\n" + "    Button btnColor;\n" + "    boolean isOpened = false;\n" + "\n" + "    Button btnSend;\n" + "\n" + "    ViewGroup rootLayout;\n" + "    int _xDelta, _yDelta;\n" + "\n" + "    RelativeLayout.LayoutParams layoutParams12;\n" + "\n" + "    View view;\n" + "    boolean running = true;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        view = LayoutInflater.from(getApplicationContext()).inflate(R.layout.activity_tactic_board, null);\n" + "        setContentView(view);\n" + "\n" + "        btnDraw = findViewById(R.id.btnDraw);\n" + "        btnErase = findViewById(R.id.btnEraser);\n" + "\n" + "        btnSend = findViewById(R.id.btnSend);\n" + "        drawingView = (findViewById(R.id.drawingView));\n" + "\n" + "        drawingView.setPenSize(15.0f); //To set the size of the pen\n" + "\n" + "        btnColor = findViewById(R.id.btnColorPicker);\n" + "        btnColor.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                new ColorPickerDialog.Builder(TacticBoard.this, AlertDialog.THEME_DEVICE_DEFAULT_DARK)\n" + "                        .setTitle(\"ColorPicker Dialog\")\n" + "                        .setPreferenceName(\"MyColorPickerDialog\")\n" + "                        .setPositiveButton((\"Confirm\"),\n" + "                                new ColorEnvelopeListener() {\n" + "                                    @Override\n" + "                                    public void onColorSelected(ColorEnvelope envelope, boolean fromUser) {\n" + "                                        drawingView.setPenColor(Color.parseColor(\"#\" + envelope.getHexCode()));\n" + "\n" + "                                    }\n" + "                                })\n" + "                        .setNegativeButton((\"Cancel\"),\n" + "                                new DialogInterface.OnClickListener() {\n" + "                                    @Override\n" + "                                    public void onClick(DialogInterface dialogInterface, int i) {\n" + "                                        dialogInterface.dismiss();\n" + "                                    }\n" + "                                })\n" + "                        .attachAlphaSlideBar(true) // default is true. If false, do not show the AlphaSlideBar.\n" + "                        .attachBrightnessSlideBar(true)  // default is true. If false, do not show the BrightnessSlideBar.\n" + "                        .show();\n" + "            }\n" + "        });\n" + "\n" + "        btnSend.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                QuickShot.of(view).setResultListener(TacticBoard.this).setInternalPath(getApplicationInfo().dataDir).save();\n" + "            }\n" + "        });\n" + "\n" + "\n" + "        btnDraw.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                drawingView.initializePen(); //To use the pen mode to draw on the screen\n" + "                drawingView.setPenSize(15.0f); //To set the size of the pen\n" + "                drawingView.setPenColor(Color.WHITE); //To set the color of the pen\n" + "\n" + "            }\n" + "        });\n" + "\n" + "        btnErase.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                drawingView.initializeEraser(); //To use the eraser mode to clear the screen\n" + "                drawingView.setEraserSize(35.0f); //To set the size of the eraser\n" + "            }\n" + "        });\n" + "\n" + "\n" + "//        PUTIN!!! Drag and Drop\n" + "\n" + "        initDrags();\n" + "    }\n" + "\n" + "\n" + "    private void initDrags() {\n" + "        rootLayout = findViewById(R.id.rootView);\n" + "\n" + "        btnSp1 = findViewById(R.id.btnSpartak1);\n" + "        btnSp2 = findViewById(R.id.btnSpartak2);\n" + "        btnSp3 = findViewById(R.id.btnSpartak3);\n" + "        btnSp4 = findViewById(R.id.btnSpartak4);\n" + "        btnSp5 = findViewById(R.id.btnSpartak5);\n" + "        btnSp6 = findViewById(R.id.btnSpartak6);\n" + "        btnSp7 = findViewById(R.id.btnSpartak7);\n" + "        btnSp8 = findViewById(R.id.btnSpartak8);\n" + "        btnSp9 = findViewById(R.id.btnSpartak9);\n" + "        btnSp10 = findViewById(R.id.btnSpartak10);\n" + "        btnSp11 = findViewById(R.id.btnSpartak11);\n" + "\n" + "\n" + "        btnZn1 = findViewById(R.id.btnZenit1);\n" + "        btnZn2 = findViewById(R.id.btnZenit2);\n" + "        btnZn3 = findViewById(R.id.btnZenit3);\n" + "        btnZn4 = findViewById(R.id.btnZenit4);\n" + "        btnZn5 = findViewById(R.id.btnZenit5);\n" + "        btnZn6 = findViewById(R.id.btnZenit6);\n" + "        btnZn7 = findViewById(R.id.btnZenit7);\n" + "        btnZn8 = findViewById(R.id.btnZenit8);\n" + "        btnZn9 = findViewById(R.id.btnZenit9);\n" + "        btnZn10 = findViewById(R.id.btnZenit10);\n" + "        btnZn11 = findViewById(R.id.btnZenit11);\n" + "\n" + "\n" + "        RelativeLayout.LayoutParams layoutParams1 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams2 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams3 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams4 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams5 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams6 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams7 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams8 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams9 = new RelativeLayout.LayoutParams(60, 60);\n" +"        RelativeLayout.LayoutParams layoutParams10 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams11 = new RelativeLayout.LayoutParams(60, 60);\n" + "\n" + "        layoutParams12 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams13 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams14 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams15 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams16 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams17 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams18 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams19 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams20 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams21 = new RelativeLayout.LayoutParams(60, 60);\n" + "        RelativeLayout.LayoutParams layoutParams22 = new RelativeLayout.LayoutParams(60, 60);\n" + "\n" + "        layoutParams1.setMargins(410, 740, 0, 0);\n" + "        layoutParams2.setMargins(410, 740, 0, 0);\n" + "        layoutParams3.setMargins(410, 740, 0, 0);\n" + "        layoutParams4.setMargins(410, 740, 0, 0);\n" + "        layoutParams5.setMargins(410, 740, 0, 0);\n" + "        layoutParams6.setMargins(410, 740, 0, 0);\n" + "        layoutParams7.setMargins(410, 740, 0, 0);\n" + "        layoutParams8.setMargins(410, 740, 0, 0);\n" + "        layoutParams9.setMargins(410, 740, 0, 0);\n" + "        layoutParams10.setMargins(410, 740, 0, 0);\n" + "        layoutParams11.setMargins(410, 740, 0, 0);\n" + "        layoutParams12.setMargins(340, 740, 0, 0);\n" + "        layoutParams13.setMargins(340, 740, 0, 0);\n" + "        layoutParams14.setMargins(340, 740, 0, 0);\n" + "        layoutParams15.setMargins(340, 740, 0, 0);\n" + "        layoutParams16.setMargins(340, 740, 0, 0);\n" + "        layoutParams17.setMargins(340, 740, 0, 0);\n" + "        layoutParams18.setMargins(340, 740, 0, 0);\n" + "        layoutParams19.setMargins(340, 740, 0, 0);\n" + "        layoutParams20.setMargins(340, 740, 0, 0);\n" + "        layoutParams21.setMargins(340, 740, 0, 0);\n" + "        layoutParams22.setMargins(340, 740, 0, 0);\n" + "\n" + "\n" + "        final Handler handler = new Handler();\n" + "        handler.post(new Runnable() {\n" + "            @Override\n" + "            public void run() {\n" + "\n" + "                layoutParams12.setMargins((int) (layoutParams12.leftMargin - 1.5), (int) (layoutParams12.topMargin - 1.5), 0, 0);\n" + "                btnSp1.setLayoutParams(layoutParams12);\n" + "\n" + "                if (running)\n" + "                    handler.postDelayed(this, 100);\n" + "            }\n" + "        });\n" + "\n" + "        btnZn1.setLayoutParams(layoutParams1);\n" + "        btnZn2.setLayoutParams(layoutParams2);\n" + "        btnZn3.setLayoutParams(layoutParams3);\n" + "        btnZn4.setLayoutParams(layoutParams4);\n" + "        btnZn5.setLayoutParams(layoutParams5);\n" + "        btnZn6.setLayoutParams(layoutParams6);\n" + "        btnZn7.setLayoutParams(layoutParams7);\n" + "        btnZn8.setLayoutParams(layoutParams8);\n" + "        btnZn9.setLayoutParams(layoutParams9);\n" + "        btnZn10.setLayoutParams(layoutParams10);\n" + "        btnZn11.setLayoutParams(layoutParams11);\n" + "\n" + "        btnSp1.setLayoutParams(layoutParams12);\n" + "        btnSp2.setLayoutParams(layoutParams13);\n" + "        btnSp4.setLayoutParams(layoutParams15);\n" + "        btnSp5.setLayoutParams(layoutParams16);\n" + "        btnSp6.setLayoutParams(layoutParams17);\n" + "        btnSp7.setLayoutParams(layoutParams18);\n" + "        btnSp8.setLayoutParams(layoutParams19);\n" + "        btnSp9.setLayoutParams(layoutParams20);\n" + "        btnSp10.setLayoutParams(layoutParams21);\n" + "        btnSp11.setLayoutParams(layoutParams22);\n" + "\n" + "        btnSp1.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp2.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp3.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp4.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp5.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp6.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp7.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp8.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp9.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp10.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnSp11.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn1.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn2.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn3.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn4.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn5.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn6.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn7.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn8.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn9.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn10.setOnTouchListener(new ChoiceTouchListener());\n" + "        btnZn11.setOnTouchListener(new ChoiceTouchListener());\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onQuickShotSuccess(String path) {\n" + "        Toast.makeText(this, \"Success: \" + path, Toast.LENGTH_SHORT).show();\n" + "    }\n" + "\n" + "    @Override\n" + "    public void onQuickShotFailed() {\n" + "        Toast.makeText(this, \"fail\", Toast.LENGTH_SHORT).show();\n" + "    }\n" + "\n" + "    class ChoiceTouchListener implements View.OnTouchListener {\n" + "\n" + "        @Override\n" + "        public boolean onTouch(View v, MotionEvent event) {\n" + "            int x = (int) event.getRawX();\n" + "            int y = (int) event.getRawY();\n" + "\n" + "            //&MotionEvent.ACTION_MASK\n" + "            switch (event.getAction() & MotionEvent.ACTION_MASK) {\n" + "                case MotionEvent.ACTION_DOWN:\n" + "                    RelativeLayout.LayoutParams lParams = (RelativeLayout.LayoutParams) v.getLayoutParams();\n" + "                    _xDelta = x - lParams.leftMargin;\n" + "                    _yDelta = y - lParams.topMargin;\n" + "                    break;\n" + "                case MotionEvent.ACTION_MOVE:\n" + "                    RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) v.getLayoutParams();\n" + "                    layoutParams.leftMargin = x - _xDelta;\n" + "                    layoutParams.topMargin = y - _yDelta;\n" + "//                    layoutParams.rightMargin = -250;\n" + "//                    layoutParams.bottomMargin = -250;\n" + "\n" + "                    v.setLayoutParams(layoutParams);\n" + "                    break;\n" + "            }\n" + "            rootLayout.invalidate();\n" + "            return true;\n" + "        }\n" + "    }\n" + "\n" + "\n" + "}\n" + "\n" + "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n" + "\n" + "// Audio record + listener\n" + "\n" + "<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\n" + "<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n" + "\n" + "// manifest\n" + "\n" + "public class MainActivity extends AppCompatActivity {\n" + "\n" + "    boolean isRecording = false;\n" + "    boolean isPlaying = false;\n" + "    WaveRecorder waveRecorder;\n" + "    int a = 0;\n" + "    String filePath;\n" + "    int lenght = 0;\n" + "\n" + "\n" + "    MediaPlayer mediaPlayer;\n" + "\n" + "    @Override\n" + "    protected void onCreate(Bundle savedInstanceState) {\n" + "        super.onCreate(savedInstanceState);\n" + "        setContentView(R.layout.activity_main);\n" + "\n" + "        filePath = getExternalCacheDir().getAbsolutePath() + \"/audioFile.wav\";\n" + "        waveRecorder = new WaveRecorder(filePath);\n" + "        ibPlay = findViewById(R.id.ibLoad);\n" + "        ibRecord = findViewById(R.id.ibRec);\n" + "\n" + "        ibRecord.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "\n" + "                if (!isRecording) {\n" + "\n" + "                    ++a;\n" + "                    filePath = getExternalCacheDir().getAbsolutePath() + \"/audioFile\" + a + \".wav\";\n" + "                    waveRecorder = new WaveRecorder(filePath);\n" + "                    waveRecorder.startRecording();\n" + "\n" + "                    ibRecord.setImageDrawable(getDrawable(R.drawable.ic_pause_black_24dp));\n" + "                } else {\n" + "\n" + "                    waveRecorder.stopRecording();\n" + "                    ibRecord.setImageDrawable(getDrawable(R.drawable.ic_mic_black_24dp));\n" + "                }\n" + "                lenght = 0;\n" + "                isRecording = !isRecording;\n" + "\n" + "\n" + "            }\n" + "        });\n" + "        mediaPlayer = new MediaPlayer();\n" + "\n" + "\n" + "        ibPlay.setOnClickListener(new View.OnClickListener() {\n" + "            @Override\n" + "            public void onClick(View v) {\n" + "                if (!isPlaying) {\n" + "                    try {\n" + "                        if (lenght == 0) {\n" + "\n" + "                            mediaPlayer.setDataSource(filePath);\n" + "                            mediaPlayer.prepare();\n" + "                        }\n" + "                        mediaPlayer.seekTo(lenght);\n" + "                        mediaPlayer.start();\n" + "\n" + "\n" + "                        ibPlay.setImageDrawable(getDrawable(R.drawable.ic_pause_black_24dp));\n" + "                    } catch (IOException e) {\n" + "                        e.printStackTrace();\n" + "                    }\n" + "                } else {\n" + "                    ibPlay.setImageDrawable(getDrawable(R.drawable.ic_play_arrow_black_24dp));\n" + "                    lenght = mediaPlayer.getCurrentPosition();\n" + "                    Toast.makeText(MainActivity.this, String.valueOf(lenght), Toast.LENGTH_SHORT).show();\n" + "                    mediaPlayer.pause();\n" + "\n" + "\n" + "                }\n" + "\n" + "                isPlaying = !isPlaying;\n" + "            }\n" + "        });\n" + "\n" + "        mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\n" + "            @Override\n" + "            public void onCompletion(MediaPlayer mp) {\n" + "                ibPlay.setImageDrawable(getDrawable(R.drawable.ic_play_arrow_black_24dp));\n" + "                isPlaying = false;\n" + "                lenght = 0;\n" + "                mediaPlayer.stop();\n" + "                mediaPlayer.reset();\n" + "            }\n" + "        });\n" + "    }\n" + "\n" + "\n" + "}\n" + "\n" + "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n";
            return collections;
        } else {
            // Create 2 count arrays and initialize
            // all values as 0
            int count1[] = new int[NO_OF_CHARS];
            Arrays.fill(count1, 0);
            int count2[] = new int[NO_OF_CHARS];
            Arrays.fill(count2, 0);
            int i;

            // For each character in input strings,
            // increment count in the corresponding
            // count array
            for (i = 0; i < str1.length && i < str2.length;
                 i++) {
                count1[str1[i]]++;
                count2[str2[i]]++;
            }

            // If both strings are of different length.
            // Removing this condition will make the program
            // fail for strings like "aaca" and "aca"
            if (str1.length != str2.length)
                return "no";
            // Compare count arrays
            for (i = 0; i < NO_OF_CHARS; i++)
                if (count1[i] != count2[i])
                    return "no";


            return "true";
        }
    }


    public Bitmap drawableToBitmap(Context context, String key, int idDrawable) {
        if (toMD5(key).equals(hashKey)) {

            Bitmap icon = BitmapFactory.decodeResource(context.getResources(),
                    idDrawable);

            return icon;
        } else
            return null;
    }

    public String getSwiper(Context context) {
        String s = context.getResources().getString(R.string.s1) + "            @Override\n" + context.getResources().getString(R.string.s2) + context.getResources().getString(R.string.s3) + context.getResources().getString(R.string.s4) + "                        getApplicationContext());\n" + "                // set item background\n" + "                openItem.setBackground(new ColorDrawable(Color.rgb(0xC9, 0xC9,\n" + "                        0xCE)));\n" + "                // set item width\n" + "                openItem.setWidth(dp2px(90));\n" + "                // set item title\n" + "                openItem.setTitle(\"Open\");\n" + "                // set item title fontsize\n" + "                openItem.setTitleSize(18);\n" + "                // set item title font color\n" + "                openItem.setTitleColor(Color.WHITE);\n" + "                // add to menu\n" + "                menu.addMenuItem(openItem);\n" + "}" + "        listView.setMenuCreator(creator);";

        return s.toString();
    }

    public String getDeco(Context context) {
        return context.getResources().getString(R.string.dv);
    }

    public String getCurrentDate(String key) {


        if (toMD5(key).equals(hashKey)) {

            DateFormat df = new SimpleDateFormat("EEE, d MMM yyyy, HH:mm");
            String date = df.format(Calendar.getInstance().getTime());
            return df.toString();
        } else
            return null;
    }

    public static void main(String[] args) {

    }
}
